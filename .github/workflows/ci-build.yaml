# Copyright Contributors to the L3AF Project.
# SPDX-License-Identifier: Apache-2.0
#
# For documentation on the github environment, see
# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
#
# For documentation on the syntax of this file, see
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: CI Ubuntu build
on:
  pull_request: {}
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go 1.21.3
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 
        with:
          go-version: '1.21.3'

      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libc-dev bash perl curl make docker docker.io

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 

      - name: Format
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          res="$(goimports -l .)"
          if [[ "$(printf '%s' "$res")" != '' ]]; then
            echo "Unformatted source code:"
            echo "$res"
            exit 1
          fi

      - name: Vet
        run: |
          go vet ./...

      - name: Test
        run: |
          go test ./...
          go clean -modcache

      - uses: dominikh/staticcheck-action@fe1dd0c3658873b46f8c9bb3291096a617310ca6 
        with:
          version: "2023.1.1"
          install-go: false
          cache-key: "1.21.x"

      - name: Build
        run: |
          make

      - name: Build docker image
        run: |
          sudo cp ./config/l3afd.cfg ./build-docker
          sudo cp l3afd ./build-docker
          sudo docker build -t l3afd:latest -f ./build-docker/Dockerfile ./build-docker
          sudo docker save l3afd:latest > l3afd-docker-img-linux-x86_64.tar

      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
        with:
          name: l3afd-latest-linux-x86_64
          path: l3afd

      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
        with:
          name: l3afd-docker-img-linux-x86_64.tar
          path: l3afd-docker-img-linux-x86_64.tar
